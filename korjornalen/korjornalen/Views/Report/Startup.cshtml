@model korjornalen.ViewModels.ReportStartupViewModel

@{
    ViewBag.Title = "Startup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Start new drive</h2>
<hr />
<div id="appMessage-container">
    @Html.Partial("_AppMessage")
</div>

@using (Html.BeginForm("Startup", "Report", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AvailableCars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SelectedCarRegistrationNumber == null)
                {
                    @Html.DropDownListFor(m => m.SelectedCarId, Model.AvailableCars, new { @class = "form-control" })
                }
                else
                {
                    <span class="form-text text-muted">@Model.SelectedCarRegistrationNumber</span>
                    @Html.HiddenFor(m => m.SelectedCarId)
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableProjects, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SelectedProjectName == null)
                {
                    @Html.DropDownListFor(m => m.SelectedProjectId, (SelectList)Model.AvailableProjects, new { @class = "form-control" })
                }
                else
                {
                    <span class="form-text text-muted">@Model.SelectedProjectName</span>
                    @Html.HiddenFor(m => m.SelectedProjectId)
                }
                @Html.ActionLink(AppString.LinkToProjectAssociate, "Associate", "Project")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OdometerStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OdometerStart, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewBag.OdometerError != null) {
                    <span class="text-danger field-validation-error">
                        <span>@ViewBag.OdometerError</span>
                    </span>
                }
                @Html.ValidationMessageFor(model => model.OdometerStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@AppString.ReportStartupSubmit" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Content/script-report");
}
